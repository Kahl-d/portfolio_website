:root {
    --index: calc(0.5vw + 0.5vh); /* Smaller size for items */
    --transition: cubic-bezier(.1, .7, 0, 1);
}

.wrapper_lp {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    position: relative;
    padding: 0.5rem;
    background-color: #000;
}




@keyframes bounce {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(10px);
    }
}

.grid_lp {
    display: grid;
    grid-template-columns: repeat(20, 1fr);
    perspective: calc(var(--index) * 35);
    transform-style: preserve-3d;
    width: 100%;
    height: 100%;
    background-color: #000;
}

.item {
    width: 100%;
    height: 100%;
    background-color: #000;
    background-size: cover;
    background-position: center;
    cursor: pointer;
    transition: transform 1s var(--transition), filter 1s var(--transition), box-shadow 1s var(--transition), background-color 1s var(--transition);
    will-change: transform, filter, box-shadow, background-color;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    transform-style: preserve-3d;
    color: black;
    font-size: calc(var(--index) * 1.5);
    font-weight: bold;
}

.item div {
    display: flex;
    flex-direction: column;
}

.icon {
    font-size: 3rem;
}

.item:hover {
    filter: none;
    transform: translateZ(calc(var(--index) * 8.5)) scale(1.1);
    box-shadow: 0 0 1.5rem rgba(255, 255, 255, 0.55);
    color: #1e1e1e;
}

.grid_lp .item[data-distance="1"] {
    transform: translateZ(calc(var(--index) * 7.5)) scale(1.005);
    background-color: rgba(255, 255, 255, 0.65);
}

.grid_lp .item[data-distance="2"] {
    transform: translateZ(calc(var(--index) * 6.5)) scale(1.003);
    background-color: rgba(255, 255, 255, 0.75);
}

.grid_lp .item[data-distance="3"] {
    transform: translateZ(calc(var(--index) * 4.5)) scale(1.002);
    background-color: rgba(255, 255, 255, 0.85);
}

.grid_lp .item[data-distance="4"] {
    transform: translateZ(calc(var(--index) * 2.5)) scale(1.001);
    background-color: rgba(255, 255, 255, 0.95);
}

.grid_lp .item[data-distance="5"] {
    transform: translateZ(calc(var(--index) * 1.0)) scale(1.0005);
    background-color: rgb(251, 251, 251);
}

.item[data-distance="0"] {
    transform: translateZ(calc(var(--index) * 8.5)) scale(1);
    background-color: rgb(255, 255, 255);
}

.highlighted {
    background: white;
}

.highlighted:hover {
    background: #1e1e1e;
}

